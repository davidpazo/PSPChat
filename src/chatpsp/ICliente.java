/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatpsp;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSocket;
import javax.net.ssl.SSLSocketFactory;

/**** @author DAVID */

public class ICliente extends javax.swing.JFrame {

    private PrintWriter pw;
    private BufferedReader br;
    private int puerto = 9090;
    private SSLContext sc;

    /**
     * Creates new form ICliente
     */
     public ICliente(SSLContext sc) {
        initComponents();
        try {
            this.sc = sc;
            // Creamos el servidor SSL mediante el objeto SSL
            // context que le pasamos desde el main.
            SSLSocketFactory sf = sc.getSocketFactory();
            SSLSocket sslSocket = (SSLSocket) sf.createSocket("localhost", puerto);
            //Usamos el printwriter y el buferred reader para la entrada y salida de streams.
            pw = new PrintWriter(sslSocket.getOutputStream(), true);
            br = new BufferedReader(new InputStreamReader(sslSocket.getInputStream()));
            //Le damos titulo al cliente y visible, y llamamos al metodo liar
            setTitle("Cliente");
            setVisible(true);
            readMessage();
        } catch (IOException ex) {
            System.out.println(ex);
        }
    }

    //Aqui creamos un hilo con el que lee el mensaje que manda el servidor
    public void readMessage() {
        Thread read = new Thread() {
            @Override
            public void run() {
                try {
                    String mensaje;
                    while ((mensaje = br.readLine()) != null) {
                        System.out.println("Leyendo...");
                        TextAreaC.append("\n" + mensaje);
                    }
                } catch (IOException ex) {
                    System.out.println(ex);
                }
            }
        };
        read.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ButtonC = new javax.swing.JButton();
        TextFieldC = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextAreaC = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ButtonC.setText("Enviar");
        ButtonC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCActionPerformed(evt);
            }
        });

        TextFieldC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldCActionPerformed(evt);
            }
        });

        TextAreaC.setColumns(20);
        TextAreaC.setRows(5);
        jScrollPane1.setViewportView(TextAreaC);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(TextFieldC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonC)
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonC)
                    .addComponent(TextFieldC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCActionPerformed
        //En este metodo evalua el texto y si detecta la palabra magica sale del programa.
        String texto = TextFieldC.getText();
        if (texto.equalsIgnoreCase("salir")) {
            System.exit(0);
        } else {
            //Aqui le pasamos el texto que manda el servidor al textarea 
            TextAreaC.append("\nCliente dice:" + texto);
            pw.println("Cliente dice: " + texto);
            pw.flush();
            //Y ponemos el textField vacio            
            TextFieldC.setText("");
        }
    }//GEN-LAST:event_ButtonCActionPerformed

    private void TextFieldCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldCActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonC;
    private javax.swing.JTextArea TextAreaC;
    private javax.swing.JTextField TextFieldC;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
